<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xyy.b2c.root.product.mapper.SpecValueMapper">
  <resultMap id="BaseResultMap" type="org.xyy.b2c.leaf.product.model.SpecValue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="spec_name_id" jdbcType="INTEGER" property="specNameId" />
    <result column="spec_value" jdbcType="VARCHAR" property="specValue" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="updated" jdbcType="BIGINT" property="updated" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, spec_name_id, spec_value, created, updated, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_spec_value
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_spec_value
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.xyy.b2c.leaf.product.model.SpecValue">
    insert into product_spec_value (id, spec_name_id, spec_value, 
      created, updated, deleted
      )
    values (#{id,jdbcType=INTEGER}, #{specNameId,jdbcType=INTEGER}, #{specValue,jdbcType=VARCHAR}, 
      #{created,jdbcType=BIGINT}, #{updated,jdbcType=BIGINT}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.xyy.b2c.leaf.product.model.SpecValue">
    insert into product_spec_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="specNameId != null">
        spec_name_id,
      </if>
      <if test="specValue != null">
        spec_value,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="specNameId != null">
        #{specNameId,jdbcType=INTEGER},
      </if>
      <if test="specValue != null">
        #{specValue,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.xyy.b2c.leaf.product.model.SpecValue">
    update product_spec_value
    <set>
      <if test="specNameId != null">
        spec_name_id = #{specNameId,jdbcType=INTEGER},
      </if>
      <if test="specValue != null">
        spec_value = #{specValue,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xyy.b2c.leaf.product.model.SpecValue">
    update product_spec_value
    set spec_name_id = #{specNameId,jdbcType=INTEGER},
      spec_value = #{specValue,jdbcType=VARCHAR},
      created = #{created,jdbcType=BIGINT},
      updated = #{updated,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>